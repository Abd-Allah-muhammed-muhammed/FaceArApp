package net.middledleeast.tamm.hotellibs.org.tempuri;


import net.middledleeast.tamm.hotellibs.tektravel.hotelbookingapi.IHotelService;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.3.2
 * 2019-06-26T14:07:39.573+02:00
 * Generated source version: 3.3.2
 *
 */
@WebServiceClient(name = "HotelService",
                  wsdlLocation = "https://api.tbotechnology.in/HotelAPI_V7/HotelService.svc?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class HotelService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "HotelService");
    public final static QName WSHttpBindingIHotelService = new QName("http://tempuri.org/", "WSHttpBinding_IHotelService");
    public final static QName WSHttpBindingIHotelService1 = new QName("http://tempuri.org/", "WSHttpBinding_IHotelService1");
    public final static QName BasicHttpBindingIHotelService = new QName("http://tempuri.org/", "BasicHttpBinding_IHotelService");
    public final static QName BasicHttpBindingIHotelService1 = new QName("http://tempuri.org/", "BasicHttpBinding_IHotelService1");
    static {
        URL url = null;
        try {
            url = new URL("https://api.tbotechnology.in/HotelAPI_V7/HotelService.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(HotelService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://api.tbotechnology.in/HotelAPI_V7/HotelService.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public HotelService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HotelService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HotelService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public HotelService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public HotelService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public HotelService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "WSHttpBinding_IHotelService")
    public IHotelService getWSHttpBindingIHotelService() {
        return super.getPort(WSHttpBindingIHotelService, IHotelService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "WSHttpBinding_IHotelService")
    public IHotelService getWSHttpBindingIHotelService(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIHotelService, IHotelService.class, features);
    }


    /**
     *
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "WSHttpBinding_IHotelService1")
    public IHotelService getWSHttpBindingIHotelService1() {
        return super.getPort(WSHttpBindingIHotelService1, IHotelService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "WSHttpBinding_IHotelService1")
    public IHotelService getWSHttpBindingIHotelService1(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIHotelService1, IHotelService.class, features);
    }


    /**
     *
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "BasicHttpBinding_IHotelService")
    public IHotelService getBasicHttpBindingIHotelService() {
        return super.getPort(BasicHttpBindingIHotelService, IHotelService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "BasicHttpBinding_IHotelService")
    public IHotelService getBasicHttpBindingIHotelService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIHotelService, IHotelService.class, features);
    }


    /**
     *
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "BasicHttpBinding_IHotelService1")
    public IHotelService getBasicHttpBindingIHotelService1() {
        return super.getPort(BasicHttpBindingIHotelService1, IHotelService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IHotelService
     */
    @WebEndpoint(name = "BasicHttpBinding_IHotelService1")
    public IHotelService getBasicHttpBindingIHotelService1(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIHotelService1, IHotelService.class, features);
    }

}
