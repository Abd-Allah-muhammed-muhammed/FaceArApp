package com.Tamm.Hotels.wcf;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.5.5
//
// Created by Quasar Development 
//
//---------------------------------------------------


import org.ksoap2.serialization.AttributeContainer;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.ArrayList;
import java.util.Hashtable;

public class BookingOptions extends AttributeContainer implements KvmSerializable {


    public Boolean FixedFormat = false;

    public ArrayList<RoomCombination> RoomCombination = new ArrayList<RoomCombination>();
    private transient java.lang.Object __source;


    public void loadFromSoap(java.lang.Object paramObj, ExtendedSoapSerializationEnvelope __envelope) {
        if (paramObj == null)
            return;
        AttributeContainer inObj = (AttributeContainer) paramObj;
        __source = inObj;
        if (inObj instanceof SoapObject) {
            SoapObject soapObject = (SoapObject) inObj;
            int size = soapObject.getPropertyCount();
            for (int i0 = 0; i0 < size; i0++) {
                PropertyInfo info = soapObject.getPropertyInfo(i0);
                if (!loadProperty(info, soapObject, __envelope)) {
                }
            }
        }

    }


    protected boolean loadProperty(PropertyInfo info, SoapObject soapObject, ExtendedSoapSerializationEnvelope __envelope) {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("FixedFormat")) {
            if (obj != null) {
                if (obj.getClass().equals(SoapPrimitive.class)) {
                    SoapPrimitive j = (SoapPrimitive) obj;
                    if (j.toString() != null) {
                        this.FixedFormat = new Boolean(j.toString());
                    }
                } else if (obj instanceof Boolean) {
                    this.FixedFormat = (Boolean) obj;
                }
            }
            return true;
        }
        if (info.name.equals("RoomCombination")) {
            if (obj != null) {
                if (this.RoomCombination == null) {
                    this.RoomCombination = new java.util.ArrayList<RoomCombination>();
                }
                java.lang.Object j = obj;
                RoomCombination j1 = (RoomCombination) __envelope.get(j, RoomCombination.class, false);
                this.RoomCombination.add(j1);
            }
            return true;
        }
        return false;
    }

    public java.lang.Object getOriginalXmlSource() {
        return __source;
    }


    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if (propertyIndex == 0) {
            return FixedFormat;
        }
        if (propertyIndex >= 1 && propertyIndex < 1 + this.RoomCombination.size()) {
            java.lang.Object RoomCombination = this.RoomCombination.get(propertyIndex - (1));
            return RoomCombination != null ? RoomCombination : SoapPrimitive.NullNilElement;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 1 + RoomCombination.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        if (propertyIndex == 0) {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "FixedFormat";
            info.namespace = "http://TekTravel/HotelBookingApi";
        }
        if (propertyIndex >= 1 && propertyIndex < 1 + this.RoomCombination.size()) {
            info.type = RoomCombination.class;
            info.name = "RoomCombination";
            info.namespace = "http://TekTravel/HotelBookingApi";
        }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1) {
    }


}

